



Network Working Group                                            C. Wood
Internet-Draft                                                Apple Inc.
Intended status: Informational                         February 09, 2018
Expires: August 13, 2018


                          Linkable Identifiers
                 draft-wood-linkable-identifiers-latest

Abstract

   TODO

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on August 13, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.







Wood                     Expires August 13, 2018                [Page 1]

Internet-Draft            linkable-identifiers             February 2018


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Identifier Scope and Threat Model . . . . . . . . . . . . . .   3
   3.  Sticky Protocol Identifiers . . . . . . . . . . . . . . . . .   3
     3.1.  Internet and Link Layer . . . . . . . . . . . . . . . . .   4
     3.2.  Transport Layer . . . . . . . . . . . . . . . . . . . . .   4
     3.3.  Session Layer . . . . . . . . . . . . . . . . . . . . . .   4
     3.4.  Application Layer:  . . . . . . . . . . . . . . . . . . .   5
   4.  Limiting Linkable Identifiers . . . . . . . . . . . . . . . .   5
   5.  Timing Considerations . . . . . . . . . . . . . . . . . . . .   7
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   7
   7.  Security Considerations . . . . . . . . . . . . . . . . . . .   7
   8.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .   7
   9.  Acknowledgments . . . . . . . . . . . . . . . . . . . . . . .   7
   10. Normative References  . . . . . . . . . . . . . . . . . . . .   7
   Author's Address  . . . . . . . . . . . . . . . . . . . . . . . .   8

1.  Introduction

   Privacy is an increasingly important topic in networks and protocols.
   [RFC6973] defines correlation of information relevant to or
   associated with a specific user as a significant attack on privacy.
   Such information can be exposed at any network stack layer.  For
   example, a MAC address, if not properly rotated or randomized, may be
   used to link network packets to a single device.  Many standards
   suggest randomizing or otherwise rotating such identifiers on a
   regular basis.  Often, such advice is followed by recommendations to
   change other identifiers, e.g., IP addresses, host names, etc., in
   unison.  For example, Huitema et al.  [I-D.ietf-dnssd-privacy] say,
   "it is important that the obfuscation of instance names is performed
   at the right time, and that the obfuscated names change in synchrony
   with other identifiers, such as MAC Addresses, IP Addresses or host
   names."  Consider the following example where this advice is not
   followed, wherein an IP address is changed yet the MAC address is
   not.

   +---------------+        +---------------+
   |      ...      |  ....  |      ...      |
   +---------------+        +---------------+
   | IP Address  A <---//---> IP Address  B |
   +---------------+        +---------------+
   | MAC Address A <--------> MAC Address A |
   +---------------+        +---------------+

   +------------------------------------------>
                     time




Wood                     Expires August 13, 2018                [Page 2]

Internet-Draft            linkable-identifiers             February 2018


   An adversary may trivially link these packets together.  In this
   document, we outline simple rules that SHOULD be followed by protocol
   implementations to avoid such trivial linkability.  We then survey
   protocols developed inside the IETF and out, and identify their
   sticky identifiers.  Results were obtained by analyzing protocol
   documentation and specifications, and also scanning packet traces
   captured from protocols in practice on common systems.

2.  Identifier Scope and Threat Model

   Not all packet or datagram identifiers are visible end-to-end.  For
   example, MAC addresses are only visible on local subnets.  IP
   addresses are only visible between endpoints.  (In systems such as
   Tor, source and destination addresses change at each circuit hop.)
   Thus, threats to identifier linkability depend on the threat model
   under consideration.  Off-path adversaries are generally not a
   problem since they do not have access to datagrams in flight.  On-
   path adversaries may exist at various locations relative to an
   endpoint (sender or receiver) on a path, e.g., in a local subnet, as
   an intermediate router or middlebox between two endpoints, or as a
   TLS terminating reverse proxy.  In this document, we categorize these
   three types of adversaries as follows:

   1.  Local: An on-path adversary belonging to the same local subnet as
       an endpoint, a switch.

   2.  Intermediate: An on-path adversary that observes datagrams in
       flight but does not terminate a (TCP or TLS) connection, e.g., a
       middlebox or performance enhancing proxy (PEP).

   3.  Terminator: An on-path adversary that terminates a connection,
       e.g., a TLS-terminating reverse proxy.

3.  Sticky Protocol Identifiers

   In this section, we survey existing protocols developed inside and
   out of the IETF, and identify sticky protocol identifiers for each.
   A stick identifier is one that does not change across protocol
   "sessions," regardless of whether it is transmitted in the clear or
   not.  This may include state-generating servers or, commonly, client
   algorithm, software configuration, or device-specific fields.  We
   categorize surveyed protocols by OSI layer at which they operate.
   Specifically, we focus on Link, Internet, Transport, Session, and
   Application layers.  (Our taxonomy may not match traditional OSI
   models, though we consider it sufficiently representative.)






Wood                     Expires August 13, 2018                [Page 3]

Internet-Draft            linkable-identifiers             February 2018


3.1.  Internet and Link Layer

   o  IPv4 and IPv6: Static or infrequently rotating addresses are
      sticky identifiers when exposed on the network.

   o  Ethernet: MAC addresses are fixed to specific devices.  Unless
      frequently rotated, they are sticky identifiers.

3.2.  Transport Layer

   o  TCP [RFC0793]: TCP source ports may be sticky if reused across
      senders.  For example, most operating systems allocate allocate
      ephemeral (short lived) ports to each new connection.  Per IANA
      allocations, ephemeral ports range from 49152 to 65535 (2^15+2^14
      to 2^16-1) [http://www.iana.org/assignments/port-numbers].
      However, this does not prevent an application from re-using port
      across connections.  Destination are also intentionally sticky,
      since they identify services offered by endpoints.  Therefore,
      reusing a destination port does not lead to decreased linkability.
      Moreover, with TCP Fast Open (TFO) [RFC7413], servers give clients
      plaintext cookies that must be re-used when resuming a TCP+TFO
      connection.  Clients do not modify these server cookies, which
      therefore means they can be tracked.

   o  MPTCP [RFC6824]: Connection tokens or IDs are explicitly used to
      link MPTCP subflows between IP address pairs.  These tokens are
      only exposed during flow management operations, e.g., when
      creating new subflows.  Normal data transfer uses TCP sequence
      numbers to bypass middlebox interference and an additional data
      sequence number (DSN) TCP option to allow receivers to deal with
      out-of-order subflow packet arrival.  The union of packet DSNs
      across subflows should yield a contiguous packet number sequence.

3.3.  Session Layer

   o  TLS: Prior to TLS 1.3 ((CITE)), significant information is exposed
      during TLS handshakes, including: session identifiers (or re-used
      PSK identifiers in TLS 1.3), timestamps, random nonces, supported
      ciphersuites, certificates, and extensions.  Many of these are
      common across all TLS clients - specifically, ciphersuites,
      nonces, and timestamps.  However, others may persist across active
      sessions, including: session identifiers (in TLS 1.2 and earlier
      versions) and re-used PSK identifiers (in TLS 1.3).  Without
      rotation, these re-used identifers are sticky.

   o  DTLS: Datagram TLS ((CITE)) is a slightly modified variant of TLS
      aimed to run over datagram protocols such as UDP.  In addition to
      identifiers exposed via TLS, DTLS adds cookie-based denial-of-



Wood                     Expires August 13, 2018                [Page 4]

Internet-Draft            linkable-identifiers             February 2018


      service countermeasures.  Servers issue stateless cookies to
      clients during a handshake, which must be replayed in cleartext by
      clients to prove ownership of its IP address.  (This is similar to
      TFO cookies described above.)  Additionally, DTLS 1.3 ((CITE)) is
      considering support of a static connection identifier (CID), which
      permits client address mobility.  CIDs are specifically designed
      to not change across addresses.

   o  QUIC: QUIC ((CITE)) is another secure transport protocol
      originally developed by Google and now being standardized by the
      IETF.  IETF-QUIC ((CITE)) uses TLS 1.3 for its handshake.  In
      addition to identifiers exposed by TLS 1.3, QUIC has its own
      connection identifier (CID) used to permit address mobility.

3.4.  Application Layer:

   XXX: this section is 100% incomplete XXX: Georgios, you can probably
   start here if you're looking for some things to stab at

   o  HTTP ((CITE)): Cookies are sticky identifiers created chosen by
      servers to carry application state across requests.  Cookies might
      contain information about client identity or authentication
      preferences

   o  DNS: SRV hostnames

   o  DHCP: broadcast discover requests, hardware type, client hardware
      address, IP addresses (http://www.networksorcery.com/enp/protocol/
      dhcp.htm), transaction identifier

   o  NTP: (mode 3 -- client to server, https://tools.ietf.org/html/
      draft-ietf-ntp-data-minimization-01#section-3): Timestamps, poll
      field, precision field, all other fields (Stratum, Root Delay,
      Root Dispersion, Ref ID, Ref Timestamp, Origin Timestamp, Receive
      Timestamp)

4.  Limiting Linkable Identifiers

   The introductory example illustrating packet linkability using MAC
   addresses is one of many possible ways in which an attacker may link
   packets.  As another hypothetical example, assume that IP address and
   MAC addresses were properly rotated.  Moreover, assume TLS session
   IDs were reused over time, as shown below.








Wood                     Expires August 13, 2018                [Page 5]

Internet-Draft            linkable-identifiers             February 2018


   +---------------+        +---------------+
   |TLS SessionID X<-------->TLS SessionID X|
   +---------------+        +---------------+
   |      ...      |  ....  |      ...      |
   +---------------+        +---------------+
   | IP Address  A <---//---> IP Address  B |
   +---------------+        +---------------+
   | MAC Address A <---//---> MAC Address C |
   +---------------+        +---------------+

   +------------------------------------------>
                     time

   Despite rotating all protocol identifiers beneath TLS, a static
   session identifier makes packet linkability trivial.  Thus, a strict,
   yet safe rule for removing packet linkability is to rotate all
   identifiers in unison.  Unfortunately, this strategy is problematic
   in practice.  It would imply terminating active connections whenever
   an identifier changes (otherwise, linkability remains trivial).  If
   MAC addresses are rotated on a regular basis, e.g., every 15 minutes,
   then connection lifetimes are bounded by this window.

   Moreover, there are multiple dimensions along which identifiers may
   be linked: in time, as identifiers are used and re-used by senders,
   and space, as identifiers are duplicated across multiple disjoint
   network paths.  We refer to these dimensions as time and path
   linkability, respectively.

   Time linkability is arguably simpler to mitigate, since new
   connections over time may opt to use new identifiers.  For example,
   instead of resuming a TLS session with an existing session ID, a
   client may initiate a fresh handshake.  As a simple rule, if an
   identifier at layer (N) changes, endpoints SHOULD use fresh
   identifiers for all lower layers, i.e., 1,.., (N-1).  This means that
   new TLS sessions SHOULD be initiated from an endpoint with a fresh
   MAC address, IP address, and TCP source port.

   In contrast, path linkability is more difficult to achieve, as it
   requires using fresh identifiers for each protocol field.  (This may
   not always be technically feasible.)  Moreover, protocols such as
   QUIC explicitly try to enable path linkability via connection-level
   identifiers (CIDs) to support multihoming endpoints.  This makes path
   linkability impossible to mitigate.  However, as multiple, disjoint
   paths may be operated by different entities, it may be the case that
   collusion is less common.






Wood                     Expires August 13, 2018                [Page 6]

Internet-Draft            linkable-identifiers             February 2018


5.  Timing Considerations

   Advice in this document SHOULD NOT be interpreted as guarantees for
   preventing linkability.  Rather, they aim to increase linkability
   complexity.  It is difficult to prevent path-linkability without
   modifying protocols above the layer at which identifiers rotate.  For
   example, assuming MPTCP subflows were unlinkable across paths, shared
   transport state controlling the rate of data transmission may be
   sufficient to link these flows.

6.  IANA Considerations

   This document has no request to IANA.

7.  Security Considerations

   TODO

8.  Privacy Considerations

   TODO

9.  Acknowledgments

   TODO

10.  Normative References

   [I-D.ietf-dnssd-privacy]
              Huitema, C. and D. Kaiser, "Privacy Extensions for DNS-
              SD", draft-ietf-dnssd-privacy-03 (work in progress),
              September 2017.

   [Noise]    "The Noise Protocol Framework", n.d..

   [RFC0793]  Postel, J., "Transmission Control Protocol", STD 7,
              RFC 793, DOI 10.17487/RFC0793, September 1981,
              <https://www.rfc-editor.org/info/rfc793>.

   [RFC2508]  Casner, S. and V. Jacobson, "Compressing IP/UDP/RTP
              Headers for Low-Speed Serial Links", RFC 2508,
              DOI 10.17487/RFC2508, February 1999, <https://www.rfc-
              editor.org/info/rfc2508>.

   [RFC6824]  Ford, A., Raiciu, C., Handley, M., and O. Bonaventure,
              "TCP Extensions for Multipath Operation with Multiple
              Addresses", RFC 6824, DOI 10.17487/RFC6824, January 2013,
              <https://www.rfc-editor.org/info/rfc6824>.



Wood                     Expires August 13, 2018                [Page 7]

Internet-Draft            linkable-identifiers             February 2018


   [RFC6973]  Cooper, A., Tschofenig, H., Aboba, B., Peterson, J.,
              Morris, J., Hansen, M., and R. Smith, "Privacy
              Considerations for Internet Protocols", RFC 6973,
              DOI 10.17487/RFC6973, July 2013, <https://www.rfc-
              editor.org/info/rfc6973>.

   [RFC7413]  Cheng, Y., Chu, J., Radhakrishnan, S., and A. Jain, "TCP
              Fast Open", RFC 7413, DOI 10.17487/RFC7413, December 2014,
              <https://www.rfc-editor.org/info/rfc7413>.

Author's Address

   Christopher A. Wood
   Apple Inc.
   1 Infinite Loop
   Cupertino, California 95014
   United States of America

   Email: cawood@apple.com
































Wood                     Expires August 13, 2018                [Page 8]
